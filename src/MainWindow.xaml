<Window x:Class="ScreenRegionProtector.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ScreenRegionProtector"
        mc:Ignorable="d"
        Title="Monitor Bounds" Height="450" Width="350"
        Background="Transparent"
        WindowStyle="None"
        AllowsTransparency="True"
        MinWidth="350" MinHeight="400">
    
    <Window.Resources>
        <!-- Modern Button Style -->
        <Style x:Key="ModernButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="8,8"/>
            <Setter Property="Margin" Value="6"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#f0f0f0"/>
            <Setter Property="Foreground" Value="#202020"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" 
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter x:Name="ButtonContent" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"
                                              TextElement.Foreground="#202020"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.85"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Action Button Style (Green/Red) -->
        <Style x:Key="ActionButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder" Background="{TemplateBinding Background}" 
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter x:Name="ButtonContent" 
                                             HorizontalAlignment="Center" 
                                             VerticalAlignment="Center" 
                                             TextElement.Foreground="White"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.85"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Modern Toggle Button Style (Updated to match other buttons) -->
        <Style x:Key="ModernToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Padding" Value="8,8"/>
            <Setter Property="Margin" Value="6"/>
            <Setter Property="MinWidth" Value="40"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="#4CAF50"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" Background="{TemplateBinding Background}" 
                                CornerRadius="4"
                                Padding="{TemplateBinding Padding}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid>
                                <!-- Play Icon (Start) in unchecked state -->
                                <Path x:Name="playIcon" 
                                      Data="M6,3 L14,8 L6,13 Z" Fill="White" 
                                      Width="16" Height="16" Stretch="Uniform"
                                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                
                                <!-- Stop Icon (Stop) in checked state -->
                                <Path x:Name="stopIcon" 
                                      Data="M5,5 L11,5 L11,11 L5,11 Z" Fill="White" 
                                      Width="16" Height="16" Stretch="Uniform"
                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="#F44336"/>
                                <Setter TargetName="playIcon" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="stopIcon" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.85"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" Value="0.7"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Edit Button Style (Yellow) -->
        <Style x:Key="EditButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="#FFC107"/>
            <Setter Property="Foreground" Value="#202020"/>
        </Style>
        
        <!-- Remove Button Style (Red) -->
        <Style x:Key="RemoveButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="#F44336"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <!-- Info Button Style (Blue) -->
        <Style x:Key="InfoButtonStyle" TargetType="Button" BasedOn="{StaticResource ModernButtonStyle}">
            <Setter Property="Background" Value="#2196F3"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        
        <!-- Path icons for buttons -->
        <Style x:Key="ButtonIconStyle" TargetType="Path">
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Stretch" Value="Uniform"/>
            <Setter Property="StrokeThickness" Value="1"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        
        <!-- DataGrid Row Style for Light Theme -->
        <Style x:Key="DataGridRowStyleLight" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#e3f2fd"/>
                    <Setter Property="Foreground" Value="#202020"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#f5f5f5"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- DataGrid Row Style for Dark Theme -->
        <Style x:Key="DataGridRowStyleDark" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#3e4047"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#4a4a52"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Border x:Name="MainWindowBorder" CornerRadius="8" BorderThickness="0" Margin="10">
        <Border.Effect>
            <DropShadowEffect BlurRadius="15" ShadowDepth="2" Direction="315" Opacity="0.2" Color="#000000"/>
        </Border.Effect>
        <Border.Background>
            <SolidColorBrush Color="#F8F8F8" Opacity="0.95"/>
        </Border.Background>
        <Grid>
            <!-- Main Content -->
            <Grid Margin="4">
                <!-- Main Content Grid -->
                <Grid Margin="8,6,8,6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Header with window controls -->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <TextBlock Text="Monitor Bounds" 
                                   FontSize="18" FontWeight="SemiBold" Margin="0,0,0,12"
                                   Foreground="#1e1e1e"/>
                        </StackPanel>
                        
                        <!-- Window Controls -->
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
                            <Button x:Name="MinimizeButton" Click="MinimizeButton_Click" Width="30" Height="30" Margin="2,0" Background="Transparent" BorderThickness="0">
                                <Path Data="M0,0 L10,0" Stroke="#1e1e1e" StrokeThickness="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Button>
                            <Button x:Name="MaximizeButton" Click="MaximizeButton_Click" Width="30" Height="30" Margin="2,0" Background="Transparent" BorderThickness="0">
                                <Path Data="M0,0 L10,0 L10,10 L0,10 Z" Stroke="#1e1e1e" StrokeThickness="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Button>
                            <Button x:Name="CloseButton" Click="CloseButton_Click" Width="30" Height="30" Margin="2,0" Background="Transparent" BorderThickness="0">
                                <Path Data="M0,0 L10,10 M0,10 L10,0" Stroke="#1e1e1e" StrokeThickness="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Button>
                        </StackPanel>
                    </Grid>

                    <!-- Target Applications Section -->
                    <Grid Grid.Row="1">
                        <Border x:Name="DataGridBorder" Background="#FFFFFF" CornerRadius="6" BorderThickness="1" BorderBrush="#e0e0e0" Padding="4,0,4,0">
                            <DataGrid x:Name="ApplicationsDataGrid" 
                                      ItemsSource="{Binding TargetApplications}" 
                                      SelectedItem="{Binding SelectedApplication}"
                                      AutoGenerateColumns="False" IsReadOnly="True"
                                      SelectionMode="Single" BorderThickness="0"
                                      Background="Transparent"
                                      GridLinesVisibility="None"
                                      RowBackground="Transparent"
                                      AlternatingRowBackground="#f9f9f9"
                                      HeadersVisibility="Column"
                                      CanUserResizeRows="False"
                                      CanUserResizeColumns="True"
                                      RowStyle="{StaticResource DataGridRowStyleLight}"
                                      RowHeight="36"
                                      SelectionUnit="FullRow"
                                      EnableRowVirtualization="True"
                                      EnableColumnVirtualization="True"
                                      KeyboardNavigation.TabNavigation="Once"
                                      KeyboardNavigation.DirectionalNavigation="None"
                                      KeyboardNavigation.IsTabStop="True"
                                      FocusVisualStyle="{x:Null}"
                                      ScrollViewer.CanContentScroll="True"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto"
                                      ColumnWidth="SizeToHeader"
                                      Margin="0">
                                <DataGrid.InputBindings>
                                    <KeyBinding Key="Enter" Command="{Binding EditApplicationCommand}" CommandParameter="{Binding SelectedApplication}" />
                                    <KeyBinding Key="Return" Command="{Binding EditApplicationCommand}" CommandParameter="{Binding SelectedApplication}" />
                                    <KeyBinding Key="Delete" Command="{Binding RemoveApplicationCommand}" CommandParameter="{Binding SelectedApplication}" />
                                </DataGrid.InputBindings>
                                <DataGrid.ContextMenu>
                                    <ContextMenu DataContext="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}"
                                                StaysOpen="False">
                                        <ContextMenu.Resources>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="Foreground" Value="#202020"/>
                                            </Style>
                                        </ContextMenu.Resources>
                                        <MenuItem Header="Edit" Command="{Binding EditApplicationCommand}" 
                                                 CommandParameter="{Binding SelectedApplication}"/>
                                        <MenuItem Header="Remove" Command="{Binding RemoveApplicationCommand}" 
                                                 CommandParameter="{Binding SelectedApplication}"/>
                                        <Separator/>
                                        <MenuItem Header="Toggle State" Command="{Binding ToggleActiveStateCommand}" 
                                                 CommandParameter="{Binding SelectedApplication}"/>
                                    </ContextMenu>
                                </DataGrid.ContextMenu>
                                <DataGrid.Resources>
                                    <Style TargetType="DataGridColumnHeader">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="Padding" Value="8 12"/>
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                    </Style>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="Padding" Value="8 4"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="VerticalAlignment" Value="Center"/>
                                        <Setter Property="IsTabStop" Value="False"/>
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    </Style>
                                    <Style TargetType="DataGridRow">
                                        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    </Style>
                                </DataGrid.Resources>
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Pattern" Binding="{Binding TitlePattern}" Width="*">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                <Setter Property="Padding" Value="12,12,8,12"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Margin" Value="8,0,0,0"/>
                                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Status" Width="Auto" MinWidth="80">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.Binding>
                                            <Binding Path="IsActive" Converter="{StaticResource BoolToStringConverter}" 
                                                     ConverterParameter="Enabled,Disabled"/>
                                        </DataGridTextColumn.Binding>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextAlignment" Value="Center"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                    <DataGridTextColumn Header="Monitor" Binding="{Binding RestrictToMonitor}" Width="Auto" MinWidth="80">
                                        <DataGridTextColumn.HeaderStyle>
                                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.HeaderStyle>
                                        <DataGridTextColumn.ElementStyle>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="TextAlignment" Value="Center"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                            </Style>
                                        </DataGridTextColumn.ElementStyle>
                                    </DataGridTextColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Border>
                    </Grid>

                    <!-- Application Buttons -->
                    <Grid Grid.Row="2" Margin="0,8,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <!-- Management Buttons -->
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <Button x:Name="AddButton" Command="{Binding AddApplicationCommand}" 
                                    Style="{StaticResource ModernButtonStyle}"
                                    ToolTip="Add Application">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="ButtonBorder" Background="#8a8a8a" 
                                                CornerRadius="4"
                                                Padding="{TemplateBinding Padding}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}">
                                            <Path Data="M5,12 L19,12 M12,5 L12,19" Stroke="White" StrokeThickness="2"
                                                  Style="{StaticResource ButtonIconStyle}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="0.85"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" Value="0.7"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Button x:Name="EditButton" Command="{Binding EditApplicationCommand}" 
                                    IsEnabled="{Binding SelectedApplication, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=bool}"
                                    Style="{StaticResource EditButtonStyle}"
                                    ToolTip="Edit Application">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="ButtonBorder" Background="#FFC107" 
                                                CornerRadius="4"
                                                Padding="{TemplateBinding Padding}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}">
                                            <Path Data="M3,17.25V21h3.75L17.81,9.94l-3.75-3.75L3,17.25z M20.71,7.04c0.39-0.39,0.39-1.02,0-1.41l-2.34-2.34c-0.39-0.39-1.02-0.39-1.41,0l-1.83,1.83l3.75,3.75L20.71,7.04z" Fill="#202020" 
                                                  Style="{StaticResource ButtonIconStyle}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="0.85"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" Value="0.7"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Button x:Name="RemoveButton" Command="{Binding RemoveApplicationCommand}" 
                                    IsEnabled="{Binding SelectedApplication, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=bool}"
                                    Style="{StaticResource RemoveButtonStyle}"
                                    ToolTip="Remove Application">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="ButtonBorder" Background="#F44336" 
                                                CornerRadius="4"
                                                Padding="{TemplateBinding Padding}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                BorderBrush="{TemplateBinding BorderBrush}">
                                            <Path Data="M6,19 L19,6 M6,6 L19,19" Stroke="White" StrokeThickness="2"
                                                  Style="{StaticResource ButtonIconStyle}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" Value="0.85"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Opacity" Value="0.7"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </StackPanel>
                        
                        <!-- Start/Stop Monitoring Toggle Button -->
                        <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                            <ToggleButton x:Name="MonitoringToggleButton" 
                                         IsChecked="{Binding IsMonitoring, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         Style="{StaticResource ModernToggleButtonStyle}"
                                         ToolTip="Toggle Monitoring"
                                         Click="MonitoringToggleButton_Click">
                            </ToggleButton>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>
